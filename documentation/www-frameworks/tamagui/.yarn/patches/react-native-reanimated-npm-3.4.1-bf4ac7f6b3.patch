diff --git a/lib/module/createAnimatedComponent.js b/lib/module/createAnimatedComponent.js
index 851d858afadaa698ce7a76fd23d5b6edaa512a5b..3fb37c2eb0e98cff6502c4f7da9d8778d195fe74 100644
--- a/lib/module/createAnimatedComponent.js
+++ b/lib/module/createAnimatedComponent.js
@@ -155,7 +155,7 @@ export default function createAnimatedComponent(Component, options) {
         getForwardedRef: () => this.props.forwardedRef,
         setLocalRef: ref => {
           // TODO update config
-          const tag = findNodeHandle(ref);
+          const tag = isWeb() ? ref : findNodeHandle(ref);
           const {
             layout,
             entering,
@@ -175,7 +175,7 @@ export default function createAnimatedComponent(Component, options) {
             if (exiting) {
               configureLayoutAnimations(tag, LayoutAnimationType.EXITING, maybeBuild(exiting));
             }
-            if (sharedTransitionTag) {
+            if (sharedTransitionTag && !isWeb()) {
               const sharedElementTransition = this.props.sharedTransitionStyle ?? new SharedTransition();
               sharedElementTransition.registerTransition(tag, sharedTransitionTag);
               this._sharedElementTransition = sharedElementTransition;
@@ -292,7 +292,7 @@ export default function createAnimatedComponent(Component, options) {
       // Otherwise, we animate the component itself.
       const component = (_this$_component3 = this._component) !== null && _this$_component3 !== void 0 && _this$_component3.getAnimatableRef ? this._component.getAnimatableRef() : this;
       if (isWeb()) {
-        viewTag = findNodeHandle(component);
+        viewTag = this._component;
         viewName = null;
         shadowNodeWrapper = null;
         viewConfig = null;
